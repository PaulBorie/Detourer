version: '3'

services:

  db:
    image: mysql:8.0.33
    container_name: db
    restart: always
    expose:
      - '3306'
    environment:
      MYSQL_DATABASE: rembg
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${APP_USER}
      MYSQL_PASSWORD: ${APP_PASSWORD}
      SERVICE_NAME: mysql
    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
    volumes:
      - mysql-data:/var/lib/mysql/
  
  rembg:
    image: paulborielabs/rembg:prod
    container_name: rembg
    restart: always
    expose: 
      - "80"
    environment:
      - WITH_SCHEDULER=true
      - APP_NAME=rembg
      - APP_ENV=local
      - APP_DEBUG=false # do not forget to set to false
      - APP_KEY=${APP_KEY}
      - APP_TIMEZONE=UTC
      - APP_URL=https://${DOMAIN_NAME} # check where it used in the app
      - APP_LOCALE=en
      - APP_FALLBACK_LOCALE=en
      - APP_FAKER_LOCALE=en_US
      - APP_MAINTENANCE_DRIVER=file
      - APP_MAINTENANCE_STORE=database
      - BCRYPT_ROUNDS=12
      # Log
      - LOG_CHANNEL=stderr
      - LOG_STACK=single
      - LOG_DEPRECATIONS_CHANNEL=null
      - LOG_LEVEL=debug
      # DB variables #
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=rembg
      - DB_USERNAME=${APP_USER}
      - DB_PASSWORD=${APP_PASSWORD}
      # Session variables # 
      - SESSION_DRIVER=database
      - SESSION_LIFETIME=120
      - SESSION_ENCRYPT=false
      - SESSION_PATH=/
      - SESSION_DOMAIN=null
      # Cache
      - CACHE_STORE=database
      # Minio (s3) variables
      - MINIO_ENDPOINT_TEMPORARYURLS=https://minio.${DOMAIN_NAME} # must be internet accessible
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET=images
      - AWS_URL=http://minio:9000
      - AWS_ENDPOINT=http://minio:9000
      - AWS_USE_PATH_STYLE_ENDPOINT=true
      # Redis variables
      - QUEUE_CONNECTION=redis
      - REDIS_CLIENT=predis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      # Reverb Websocket
      - BROADCAST_CONNECTION=reverb
      - REVERB_APP_ID=${REVERB_APP_ID}
      - REVERB_APP_KEY=${REVERB_APP_KEY}
      - REVERB_APP_SECRET={REVERB_APP_SECRET}
      - REVERB_HOST="reverb"
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
      # Octane
      - OCTANE_SERVER=frankenphp
      # Rembg variables
      - REMBG_PROCESS_TIMEOUT=40
      - REMBG_JOB_RETRIES=2
      - MAX_IMAGE_SIZE=50000 #50Mo
      - MAX_REMBG_JOB_PER_WINDOW=6
      - REMBG_JOB_WINDOW=60 # seconds
      - REMBG_PATH=/home/worker/.local/bin/rembg
      - REMBG_MODEL_PATH=/home/worker/.u2net/u2net.onnx
      - ASSET_URL=https://${DOMAIN_NAME}
    depends_on:
      db:
        condition: service_healthy

  web:
    image: paulborielabs/webserver:prod
    container_name: web
    volumes:
      - ./nginx-templates/prod:/etc/nginx/templates #copy prod nginx conf templates here
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx/user_conf.d
      - CERTBOT_EMAIL=dummy@dummy.com
      - STAGING=0 # Set to 0 in prod
      - DOMAIN_NAME=${DOMAIN_NAME}
      - REMBG_HOST=rembg
      - REMBG_PORT=80
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ADMIN_PORT=9001
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
      - DEBUG=1     
  worker:
    image: paulborielabs/worker:latest
    deploy:
      replicas: ${NB_WORKERS}
    restart: always
    environment:
      - APP_NAME=rembg
      - APP_ENV=production
      - APP_DEBUG=false # do not forget to set to false
      - APP_KEY=${APP_KEY}
      - APP_TIMEZONE=UTC
      - APP_URL=http://localhost:8000 # check where it used in the app
      - APP_LOCALE=en
      - APP_FALLBACK_LOCALE=en
      - APP_FAKER_LOCALE=en_US
      - APP_MAINTENANCE_DRIVER=file
      - APP_MAINTENANCE_STORE=database
      - BCRYPT_ROUNDS=12
      # Log
      - LOG_CHANNEL=stderr
      - LOG_STACK=single
      - LOG_DEPRECATIONS_CHANNEL=null
      - LOG_LEVEL=debug
      # DB variables #
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=rembg
      - DB_USERNAME=${APP_USER}
      - DB_PASSWORD=${APP_PASSWORD}
      # Session variables # 
      - SESSION_DRIVER=database
      - SESSION_LIFETIME=120
      - SESSION_ENCRYPT=false
      - SESSION_PATH=/
      - SESSION_DOMAIN=null
      # Cache
      - CACHE_STORE=database
      # Minio (s3) variables
      - MINIO_ENDPOINT_TEMPORARYURLS=https://minio.${DOMAIN_NAME} # must be internet accessible
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET=images
      - AWS_URL=http://minio:9000
      - AWS_ENDPOINT=http://minio:9000
      - AWS_USE_PATH_STYLE_ENDPOINT=true
      # Redis variables
      - QUEUE_CONNECTION=redis
      - REDIS_CLIENT=predis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=null
      # Reverb Websocket
      - BROADCAST_CONNECTION=reverb
      - REVERB_APP_ID=${REVERB_APP_ID}
      - REVERB_APP_KEY=${REVERB_APP_KEY}
      - REVERB_APP_SECRET=${REVERB_APP_SECRET}
      - REVERB_HOST="reverb"
      - REVERB_PORT=8080
      - REVERB_SCHEME=http
      # Octane
      - OCTANE_SERVER=frankenphp
      # Rembg variables
      - REMBG_PROCESS_TIMEOUT=40
      - REMBG_JOB_RETRIES=2
      - MAX_IMAGE_SIZE=50000 #50Mo
      - MAX_REMBG_JOB_PER_WINDOW=6
      - REMBG_JOB_WINDOW=60 # seconds
      - REMBG_PATH=/home/worker/.local/bin/rembg
      - REMBG_MODEL_PATH=/home/worker/.u2net/u2net.onnx
    depends_on:
      db:
        condition: service_healthy

  reverb:
    image: paulborielabs/reverb:latest
    container_name: reverb
    expose:
      - "8080"
    restart: always
    environment:
      - REVERB_APP_ID=${REVERB_APP_ID}
      - REVERB_APP_KEY=${REVERB_APP_KEY}
      - REVERB_APP_SECRET=${REVERB_APP_SECRET}

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    restart: always
    expose: 
      - "9000"
      - "9001"
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: ${APP_USER}
      MINIO_ROOT_PASSWORD: ${APP_PASSWORD}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio-mc:
    image: quay.io/minio/mc:latest
    container_name: mc
    volumes:
      - ./minio/policies/laravel_policy.json:/etc/mc/laravel_policy.json
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        echo Adding MinIO host...;
        mc alias set rembg http://minio:9000 ${APP_USER} ${APP_PASSWORD};
        echo Creating bucket...;
        mc mb rembg/images;
        echo Adding user...;
        mc admin user add rembg laravel ${APP_PASSWORD};
        echo Creating Policy from the file...;
        mc admin policy create rembg readwriteimages /etc/mc/laravel_policy.json
        echo Attaching policy to user previously created...;
        mc admin policy attach rembg readwriteimages --user laravel
        echo Adding service account for user previously created...;
        mc admin user svcacct add rembg laravel --access-key ${AWS_ACCESS_KEY_ID} --secret-key ${AWS_SECRET_ACCESS_KEY}
        exit 0;
      "

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    command: --appendonly yes --save 20 1 --loglevel warning
    expose:
      - "6379"
    volumes:  
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis-data:
  minio-data:
  mysql-data:
