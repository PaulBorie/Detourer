name: Continuous deployment on prod

on:
  release:
    types: [created]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push FrankenPHP app
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: FrankenPHP.Dockerfile
          build-args: |
            VITE_REVERB_SCHEME=https
            VITE_REVERB_HOST=reverb.${{ secrets.DOMAIN_NAME }}
            VITE_REVERB_APP_KEY=${{ secrets.VITE_REVERB_APP_KEY }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rembg:prod

      - name: Build and push Webserver
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: Nginx.Dockerfile
          build-args: ENVIRONMENT=prod
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/webserver:prod

      - name: Build and push Worker
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: Worker.Dockerfile
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/worker:prod
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy
    steps:
      - name: Deploy on production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DOMAIN_NAME }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/rembg:prod
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/webserver:prod
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/worker:prod
            cd /home/${{ secrets.SSH_USER }}/Detourer
            docker compose --env-file /var/lib/rembg/prod.env -f prod.docker-compose.yaml up -d

        
          


